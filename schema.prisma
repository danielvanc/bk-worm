datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Account {
  id                 String    @id @default(cuid())
  providerType       String?
  providerId         String?   @unique
  providerAccountId  Int?      @unique
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime? @unique
  updatedAt          DateTime?
  user               User?     @relation("Account_user", fields: [userId], references: [id])
  userId             String?   @map("user")
  from_User_accounts User[]    @relation("User_accounts_many")

  @@index([userId])
}

model Session {
  id                 String    @id @default(cuid())
  expires            DateTime?
  sessionToken       String?   @unique
  accessToken        String?   @unique
  createdAt          DateTime? @unique
  updatedAt          DateTime?
  user               User?     @relation("Session_user", fields: [userId], references: [id])
  userId             String?   @map("user")
  from_User_sessions User[]    @relation("User_sessions_many")

  @@index([userId])
}

model VerificationRequest {
  id         String    @id @default(cuid())
  identifier String?   @unique
  token      String?   @unique
  expires    DateTime?
}

model User {
  id                String    @id @default(cuid())
  name              String?
  age               String?
  title             String?
  location          String?
  email             String?   @unique
  emailVerified     DateTime?
  image             String?
  password          String?
  posts             Post[]    @relation("Post_author")
  accounts          Account[] @relation("User_accounts_many")
  sessions          Session[] @relation("User_sessions_many")
  from_Account_user Account[] @relation("Account_user")
  from_Session_user Session[] @relation("Session_user")
}

model Post {
  id          String    @id @default(cuid())
  title       String?
  status      String?
  content     Json?
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Post_tags_Tag_posts")

  @@index([authorId])
}

model Tag {
  id    String  @id @default(cuid())
  name  String?
  posts Post[]  @relation("Post_tags_Tag_posts")
}